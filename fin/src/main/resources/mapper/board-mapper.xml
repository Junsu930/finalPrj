<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">
	<resultMap type="board" id="board_rm">
		<id property="boardNo" column="BOARD_NO" />
		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="createDate" column="CREATE_DATE" />
		<result property="readCount" column="READ_COUNT" />
		<result property="boardSt" column="BOARD_ST" />
		<result property="userNo" column="USER_NO" />
		<result property="boardLike" column="BOARD_LIKE" />
		<result property="boardTag" column="BOARD_TAG" />
		<result property="userNick" column="USER_NICK" />
	</resultMap>
	
	

	
	
		<!-- 게시글 상세 조회용 resultMap -->
	<resultMap type="detail" id="detail_rm">
		<id property="boardNo" column="BOARD_NO" />
		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="createDate" column="CREATE_DATE" />
		<result property="readCount" column="READ_COUNT" />
		<result property="userNo" column="USER_NO" />
		<result property="boardLike" column="BOARD_LIKE" />
		<result property="boardTag" column="BOARD_TAG" />
		<result property="userNick" column="USER_NICK" />
		
		
	</resultMap>
	
	
	<!-- 이미지 정보 조회용 resultMap -->
	<resultMap type="boardImage" id="boardImage_rm">
		<id property="imageNo" column="IMG_NO" />
		<result property="imageReName" column="IMG_RENAME" />
		<result property="imageOriginal" column="IMG_ORIGINAL" />
		<result property="boardNo" column="BOARD_NO" />
	</resultMap> 

	<select id="boardList"  parameterType="hashMap" resultMap="detail_rm">
	
<![CDATA[

SELECT *
FROM (
    SELECT RN, BOARD_NO, BOARD_TITLE, BOARD_CONTENT, CREATE_DATE, READ_COUNT,
    BOARD_ST, USER_NO, BOARD_LIKE, BOARD_TAG, USER_NICK
    FROM (
        SELECT ROW_NUMBER() OVER (ORDER BY BOARD_NO DESC) AS RN,
        BOARD_NO, BOARD_TITLE, BOARD_CONTENT, CREATE_DATE, READ_COUNT,
        BOARD_ST, USER_NO, BOARD_LIKE, BOARD_TAG, USER_NICK
        FROM BOARD 
        JOIN "USER" USING(USER_NO)
    ) A
    WHERE RN <= #{pageNum} * #{amount}
    ]]>
 <if test="searchType =='all'">
 AND BOARD_TITLE LIKE '%'||#{keyword}||'%' OR BOARD_CONTENT LIKE '%'||#{keyword}||'%'</if>
<if test="searchType =='notice'">
AND  (BOARD_TITLE LIKE '%'||#{keyword}||'%' OR BOARD_CONTENT LIKE '%'||#{keyword}||'%')
AND BOARD_TAG = 1</if>
<if test="searchType =='popular'">
AND  (BOARD_TITLE LIKE '%'||#{keyword}||'%' OR BOARD_CONTENT LIKE '%'||#{keyword}||'%')
AND BOARD_TAG = 2</if>


<![CDATA[
) B
WHERE RN > (#{pageNum}-1) * #{amount}

]]>

    </select> 
    
    	
	<select id="boardTalk" resultMap="detail_rm">
<![CDATA[
SELECT *
FROM (
    SELECT ROW_NUMBER() OVER (ORDER BY BOARD_NO DESC) AS RN,
    BOARD_NO, BOARD_TITLE, BOARD_CONTENT, CREATE_DATE, READ_COUNT,
    BOARD_ST, USER_NO, BOARD_LIKE, BOARD_TAG, USER_NICK
    FROM BOARD 
    JOIN "USER" USING(USER_NO)
) A
WHERE RN > (#{pageNum}-1) * #{amount} AND RN <= #{pageNum} * #{amount}
 
  AND BOARD_TAG = 1
]]>
    </select>
    
    
    
    
	<select id="boardQus" resultMap="detail_rm">
<![CDATA[
SELECT *
FROM (
    SELECT ROW_NUMBER() OVER (ORDER BY BOARD_NO DESC) AS RN,
    BOARD_NO, BOARD_TITLE, BOARD_CONTENT, CREATE_DATE, READ_COUNT,
    BOARD_ST, USER_NO, BOARD_LIKE, BOARD_TAG, USER_NICK
    FROM BOARD 
    JOIN "USER" USING(USER_NO)
) A
WHERE RN > (#{pageNum}-1) * #{amount} AND RN <= #{pageNum} * #{amount}
 AND BOARD_TAG = 2
 
]]>
    </select>
    
    
    	<select id="boardAll" resultMap="detail_rm">
<![CDATA[
SELECT *
FROM (
    SELECT ROW_NUMBER() OVER (ORDER BY BOARD_NO DESC) AS RN,
    BOARD_NO, BOARD_TITLE, BOARD_CONTENT, CREATE_DATE, READ_COUNT,
    BOARD_ST, USER_NO, BOARD_LIKE, BOARD_TAG, USER_NICK
    FROM BOARD 
    JOIN "USER" USING(USER_NO)
) A
WHERE RN > (#{pageNum}-1) * #{amount} AND RN <= #{pageNum} * #{amount}
 
 
]]>
    </select>
    
<!--     
      SELECT * 
    FROM (
        SELECT ROW_NUMBER() OVER (ORDER BY BOARD_NO DESC) AS RN,
        BOARD_NO,BOARD_TITLE,BOARD_CONTENT,CREATE_DATE,READ_COUNT,
        BOARD_ST,USER_NO,BOARD_LIKE,BOARD_TAG,USER_NICK
        FROM BOARD 
        JOIN "USER" USING(USER_NO)
    ) A
    WHERE RN > (#{pageNum}-1) * #{amount} AND RN <= #{pageNum} * #{amount} -->
    
    
    <select id="getTotal" resultType= "int">
    	select count(*) as total from Board
    	
    	 <if test="searchType =='all'">
    	where (BOARD_TITLE LIKE '%'||#{keyword}||'%' OR BOARD_CONTENT LIKE '%'||#{keyword}||'%')</if>
<if test="searchType =='notice'">
where (BOARD_TITLE LIKE '%'||#{keyword}||'%' OR BOARD_CONTENT LIKE '%'||#{keyword}||'%')
AND BOARD_TAG = 1</if>
<if test="searchType =='popular'">
where (BOARD_TITLE LIKE '%'||#{keyword}||'%' OR BOARD_CONTENT LIKE '%'||#{keyword}||'%')
AND BOARD_TAG = 2</if>


    </select>
    
    
     <insert id="write" parameterType="board" >
	INSERT INTO BOARD VALUES(
   	SEQ_BOARD_NO.NEXTVAL,
    #{boardTitle}, #{boardContent},DEFAULT, DEFAULT, DEFAULT, #{userNo}, DEFAULT,#{boardTag} 
   )
	</insert>
	
	
		<!-- 게시글 상세 조회 -->
	<select id="boardDetail" resultMap="detail_rm">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
		TO_CHAR(CREATE_DATE, 'YY"." MM"." DD') CREATE_DATE,
		READ_COUNT, USER_NO, BOARD_LIKE, BOARD_LIKE,
		BOARD_TAG,USER_NICK
		FROM BOARD
		JOIN "USER" USING(USER_NO)
		WHERE BOARD_NO = #{boardNo}
		AND BOARD_ST = 'N' 

	</select>
	
	
	
	
		<!-- 조회수 증가 -->
	<update id="updateReadCount">
		UPDATE BOARD SET
		READ_COUNT = READ_COUNT + 1
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	
	
	<delete id="delete" parameterType="detail">
	
		DELETE FROM BOARD 
		WHERE BOARD_NO = #{boardNo}
	
	</delete>
	
	
	
	<update id="boardUpdate" parameterType="detail">
		UPDATE BOARD SET
		BOARD_TITLE=#{boardTitle}, BOARD_CONTENT=#{boardContent}
		WHERE BOARD_NO = #{boardNo}
	</update> 
	
	
</mapper>